<?php

namespace Drupal\config_form_custom\Form;

use Drupal\Core\Form\ConfigFormBase;
use Drupal\Core\Form\FormStateInterface;

/**
 * Class TestSettings.
 *
 * @package Drupal\config_form_custom\Form
 */
class TestSettingsForm extends ConfigFormBase {

  /**
   * {@inheritdoc}
   */
  public function getFormId() {
    // TODO: Implement getFormId() method.
    return 'config_form_custom_test_settings';
  }

  /**
   * {@inheritdoc}
   */
  public function getEditableConfigNames() {
    // TODO: Implement getEditableConfigNames() method.
    return ['config_form_custom.test_settings'];
  }

  /**
   * {@inheritdoc}
   */
  public function buildForm(array $form, FormStateInterface $form_state) {
    $form['interval'] = [
      '#type' => 'textfield',
      '#title' => 'Interval',
      '#default_value' => $this->config('config_form_custom.test_settings')->get('interval'),
    ];

    $form['next_execution'] = [
      '#type' => 'textfield',
      '#title' => 'Next Execution',
      '#default_value' => $this->config('config_form_custom.test_settings')->get('next_execution'),
    ];

    // TODO: Change the autogenerated stub.
    return parent::buildForm($form, $form_state);
  }

  /**
   * {@inheritdoc}
   */
  public function submitForm(array &$form, FormStateInterface $form_state) {
    $config_settings = $this->config('config_form_custom.test_settings');
    $config_settings->set('interval', $form_state->getValue('interval'));
    $config_settings->set('next_execution', $form_state->getValue('next_execution'));
    $config_settings->save();

    // TODO: Change the autogenerated stub.
    parent::submitForm($form, $form_state);

  }

}
